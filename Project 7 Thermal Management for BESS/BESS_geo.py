import numpy as np
import CoolProp.CoolProp as CP

class BESS:
    '''
        Unit system of the project: C, kJ, kPa, kW, s, g ...
        Input Varibles:
            @T_air_outdoor          : temperature of outdoor air [C]
            @Q_external             : the external heat going to container walls, [kW]
            @Power_pump             : the power input to pump, [kW]
            @Power_fan              : the power input to fan, [kW]
            @Power_device           : the power input to electrically-powered devices, [kW]
            @Q_batterygenerating    : the heat generated by battery, [kW]
            @Q_eg_heater            : the heating power of glycol heater, [kW]
            @Q_air_heater           : the heating power of air heater, [kW]
            @m_dot_water_in         : the water vapor penetration, [g/s]
    '''
    def __init__(self,Q_external,Q_batterygenerating):
        
        # Suggested ranges of operating paramters
        self.T_bat_max = 30         # [C], upper limit of battery temperature
        self.T_bat_min = 20         # [C], lower limit of battery temperature
        self.Tdb_air_max = 30       # [C], upper limit of air dry-bulb temperature
        self.Tdb_air_min = 20       # [C], lower limit of air dry-bulb temperature
        self.Tdp_air_max = 16       # [C], upper limit of air dew point temperature
        self.Tdp_air_min = 12       # [C], lower limit of air dew point temperature

        # Heat capacities of components
        self.cp_bat = 0.9           # [kJ/kg-K], specific heat of battery
        self.m_bat = 15000          # [kg], mass of battery
        self.cp_dev = 0.5           # [kJ/kg-K], specific heat of devices
        self.m_dev = 200            # [kg], mass of devices
        self.cp_frame = 0.5         # [kJ/kg-K], specific heat of frame
        self.m_frame = 250          # [kg], mass of frame
        self.cp_wall = 0.5          # [kJ/kg-K], specific heat of container wall
        self.m_wall = 1500          # [kg], mass of container wall
        self.cp_eg = 3.3            # [kJ/kg-K], specific heat of water-EG coolant
        self.m_eg = 300             # [kg], mass of water-EG coolant
        self.V_air = 20             # [m^3], volume of air in container

        # Thermal resistances between components and air or water-EG coolant
        self.R_air_bat = 5              # [K/kW]
        self.R_eg_bat = 0.5             # [K/kW]
        self.R_air_dev = 10             # [K/kW]
        self.R_air_frame = 12           # [K/kW]
        self.R_air_wall = 2             # [K/kW]
        
        # Operating Conditions
        self.T_air_outdoor = 27             # [C]
        self.Q_external = Q_external
        self.Power_pump = 1.5               # [kW]
        self.Power_fan = 0.75               # [kW]
        self.Power_device = 1.5             # [kW]
        self.Q_batterygenerating = Q_batterygenerating
        self.Q_eg_heater = 5                # [kW]
        self.Q_air_heater = 3.5             # [kW]
        self.m_dot_water_in = 0.1           # [g/s]
        self.Q_air_cooling = 7              # [kW]

        # Initial Conditions
        self.Tdb_air_0 = 32                 # [C]
        self.Tdp_air_0 = 25                 # [C]
        self.P_air_0 = 99.5                 # [kPa]
        self.T_eg_0 = 25                    # [C]
        self.T_bat_0 = 25                   # [C]
        self.T_dev_0 = 25                   # [C]
        self.T_frame_0 = 25                 # [C]
        self.T_wall_0 = 25                  # [C]

        # Extra Calculation
        self.Q_cooling = -0.001*self.T_air_outdoor**2 - 0.15*self.T_air_outdoor + 20        # Cooling capacity of condenser